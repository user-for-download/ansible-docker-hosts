---
# Cloud-Init Removal with Enhanced Error Handling
- name: Remove cloud-init comprehensively
  block:
    - name: Verify cloud-init installation status
      ansible.builtin.package_facts:
        manager: auto

    - name: Purge cloud-init packages
      ansible.builtin.apt:
        name: cloud-init
        state: absent
        purge: true
        autoremove: true
      when: "'cloud-init' in ansible_facts.packages"
      register: host_settings_cloud_init_removal

- name: Remove cloud-init comprehensively
  block:
    - name: Verify cloud-init installation status
      ansible.builtin.package_facts:
        manager: auto

    - name: Purge cloud-init packages
      ansible.builtin.apt:
        name: cloud-init
        state: absent
        purge: true
        autoremove: true
      when: "'cloud-init' in ansible_facts.packages"
      notify: Remove cloud-init configuration directories

# Swap Management with Logging
- name: Manage system swap
  block:
    - name: Collect swap information
      ansible.builtin.command: swapon --show
      register: host_settings_swap_status
      changed_when: false
      failed_when: false

    - name: Disable swap
      ansible.builtin.command:
        cmd: swapoff -a
      when: host_settings_swap_status.stdout | length > 0
      changed_when: host_settings_swap_status.stdout | length > 0
      notify: Remove swap from fstab

# Automatic Updates Management
- name: Manage automatic system updates
  block:
    - name: Disable automatic updates
      ansible.builtin.systemd:
        name: "{{ host_settings_update_timer }}"
        state: stopped
        enabled: false
        masked: true
      loop: "{{ host_settings_update_timers }}"
      loop_control:
        loop_var: host_settings_update_timer
      register: host_settings_update_timers_disabled

    - name: Remove auto-update configuration
      ansible.builtin.file:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        state: absent

# Comprehensive Package Management
- name: Optimize package system
  block:
    - name: Update package cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Upgrade system packages
      ansible.builtin.apt:
        upgrade: dist
        force_apt_get: true
      register: host_settings_system_upgraded

    - name: Clean package cache
      ansible.builtin.apt:
        autoclean: true
        autoremove: true

# IPv6 Configuration with Flexibility
- name: Configure IPv6
  block:
    - name: Disable IPv6 via sysctl
      ansible.posix.sysctl:
        name: "{{ host_settings_ipv6_param }}"
        value: "1"
        state: present
        sysctl_file: /etc/sysctl.conf
        reload: true
      loop: "{{ host_settings_ipv6_disable_params }}"
      loop_control:
        loop_var: host_settings_ipv6_param
      notify: Apply sysctl configuration

    - name: Modify GRUB to disable IPv6
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        regexp: "^GRUB_CMDLINE_LINUX=.*$"
        line: 'GRUB_CMDLINE_LINUX="ipv6.disable=1"'
      notify: Update GRUB configuration

# Essential System Dependencies
- name: Install core system dependencies
  ansible.builtin.apt:
    name: "{{ core_dependencies }}"
    state: present
    update_cache: true

# Conditional Reboot
- name: Reboot system if necessary
  ansible.builtin.reboot:
    reboot_timeout: 300
    msg: "System reboot initiated by Ansible"
  when: >-
    host_settings_system_upgraded.changed or  host_settings_update_timers_disabled.changed
